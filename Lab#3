#1
import math
import numpy as np
a = 0.5
b = 1
e = 0.0001
def d(x):
    return x ** 3 + x - 1

def d1(x): 
    return 3 * x ** 2 + 1

def d2(x): 
    return 6 * x

f = d(a)
f2 = d2(a)

if f * f2 > 0:
    x = b
    z = a
else: 
    x = a
    z = b

fz = d(z)
h = x - ((d(x)) / d(x) - d(a)) * (x - a)
while abs(h) >= e:
    f = d(x)
    h = ((x - z) * f) / (f - fz)
    x = x - h

f = d(x)
print('Metod Hord\nx =', x, '\nf(x) =', f)

#2
import math
import numpy as np

a = 4.85
b = 5.2
e = 0.05
def d(x):
    return x ** 3 - 3 * x - 0.4

while abs(b - a) >= e:
    if d(a) * d((a + b) / 2) < 0:
        b = (a + b) / 2
    else:
        a = (a + b) / 2

x = (a + b) / 2
print('Metod Polovinnogo Dilennya\nx =', x,)

#3
import math

def F(x):
    return x**4-2*x**3+2*x**2-6*x-1
def F1(x):
    return 3*x**3-6*x**2+4*x-6 
def F2(x):
    return 6*x**2-12*x-4

def met(a, b):
    if F1(a) * F2(a) < 0:
        a0 = b
        b0 = a
    else:
        a0 = a
        b0 = b
    
    xp1 = (a0 - F(a0)) / F1(a0)
    xp2 = (b0 - F(b0) * (b0 - a0)) / (F(b0) - F(a0))
    
    while xp2 - xp1 < 0.0001:
        xn1 = (xp1 - F(xp1) * (xp2 - xp1)) / (F(xp2) - F(xp1))
        xn2 = xp2 - F(xp2 / F1(xp2))
        xp1 = xn1
        xp2 = xn2
    
    x = (xp1 + xp2) / 2
    return print(' Result \n x = ', x)
met(-1, -1/3)


